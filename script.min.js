let musicTracks=[],allTracksLoaded=!1,trackIds=new Set,currentIndex=0;const tracksPerLoad=3,feedContainer=document.getElementById("musicFeed"),loading=document.getElementById("loading");async function loadTracksFromFirebase(){if(!window.chatDb)return void setTimeout(loadTracksFromFirebase,500);try{const e=window.chatCollection(window.chatDb,"tracks"),t=window.chatQuery(e,window.chatOrderBy("timestamp","desc"));window.chatOnSnapshot(t,e=>{e.docChanges().forEach(e=>{if("added"===e.type){const t={id:e.doc.id,...e.doc.data()};if(allTracksLoaded&&!trackIds.has(t.id)){const e=createTrackCard(t);e.classList.add("track-new"),feedContainer.insertBefore(e,feedContainer.firstChild),setTimeout(()=>{e.classList.remove("track-new")},1e3)}trackIds.add(t.id)}}),musicTracks=[],e.forEach(e=>{musicTracks.push({id:e.id,...e.data()})}),allTracksLoaded||(allTracksLoaded=!0,feedContainer.innerHTML="",currentIndex=0,loadMoreTracks(),e.forEach(e=>{trackIds.add(e.id)}))})}catch(e){console.error("Error loading tracks:",e)}}const lazyLoadObserver=new IntersectionObserver((e,t)=>{e.forEach(e=>{if(e.isIntersecting){const a=e.target;a.dataset.src&&(a.src=a.dataset.src,a.removeAttribute("data-src"),t.unobserve(a))}})},{rootMargin:"200px"});function createTrackCard(e){const t=document.createElement("div");t.className="track-card";const a=`platform-${e.platform}`,n=e.platform.charAt(0).toUpperCase()+e.platform.slice(1);let c="152";"soundcloud"===e.platform&&(c="166"),"youtube"===e.platform&&(c="315");const s=e.submittedBy||"Anonymous",o=e.id,i=e.likes||0,r=JSON.parse(localStorage.getItem("likedTracks")||"[]"),d=r.includes(o);t.innerHTML=`<div class="track-header"><div class="track-title">${e.title}</div><div class="track-artist">${e.artist}</div><div class="track-meta"><span class="track-platform ${a}">${n}</span><span class="track-submitter">shared by ${s}</span></div></div><div class="track-player"><iframe data-src="${e.embedUrl}" height="${c}" frameborder="0" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy" style="background: #0a0a0a;"></iframe></div><div class="track-interactions"><button class="like-btn ${d?"liked":""}" data-track-id="${o}"><svg width="16" height="16" viewBox="0 0 24 24" fill="${d?"currentColor":"none"}" stroke="currentColor" stroke-width="2"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg><span class="like-count">${i}</span></button><button class="comment-btn" data-track-id="${o}"><svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg><span>Comment</span><span class="comment-count" style="display: none;">0</span></button></div><div class="track-comments" id="comments-${o}" style="display: none;"><div class="comments-list" id="comments-list-${o}"></div><div class="comment-input-container"><input type="text" class="comment-input" placeholder="Add a comment..." maxlength="200"><button class="comment-send">Send</button></div></div>`,setupInteractions(t,o),initCommentCount(o);const l=t.querySelector("iframe");return l&&lazyLoadObserver.observe(l),t}function loadMoreTracks(){const e=Math.min(currentIndex+tracksPerLoad,musicTracks.length);for(let t=currentIndex;t<e;t++){const e=createTrackCard(musicTracks[t]);feedContainer.appendChild(e)}currentIndex=e,currentIndex>=musicTracks.length&&(currentIndex=0)}function handleScroll(){const e=window.innerHeight+window.scrollY,t=document.documentElement.scrollHeight-500;e>=t&&!loading.classList.contains("active")&&(loading.classList.add("active"),setTimeout(()=>{loadMoreTracks(),loading.classList.remove("active")},800))}function setupInteractions(e,t){const a=e.querySelector(".like-btn"),n=e.querySelector(".comment-btn"),c=e.querySelector(`#comments-${t}`),s=e.querySelector(".comment-input"),o=e.querySelector(".comment-send");a.addEventListener("click",async()=>{if(!window.chatDb)return;const e=JSON.parse(localStorage.getItem("likedTracks")||"[]"),n=e.includes(t),c=window.chatDoc(window.chatDb,"tracks",t),s=a.querySelector(".like-count");try{const o=await window.chatGetDoc(c),i=o.data().likes||0;if(n){const t=Math.max(0,i-1);await window.chatUpdateDoc(c,{likes:t}),s.textContent=t;const n=e.filter(e=>e!==t);localStorage.setItem("likedTracks",JSON.stringify(n)),a.classList.remove("liked"),a.querySelector("svg").setAttribute("fill","none")}else{const n=i+1;await window.chatUpdateDoc(c,{likes:n}),s.textContent=n,e.push(t),localStorage.setItem("likedTracks",JSON.stringify(e)),a.classList.add("liked"),a.querySelector("svg").setAttribute("fill","currentColor")}}catch(e){console.error("Error liking track:",e)}}),n.addEventListener("click",()=>{const e="none"!==c.style.display;c.style.display=e?"none":"block",e||loadComments(t)}),o.addEventListener("click",()=>sendComment(t,s)),s.addEventListener("keypress",e=>{"Enter"===e.key&&sendComment(t,s)})}async function sendComment(e,t){const a=t.value.trim();if(!a||!window.chatDb)return;const n=localStorage.getItem("chatUsername")||"Anonymous";try{await window.chatAddDoc(window.chatCollection(window.chatDb,`tracks/${e}/comments`),{username:n,text:a,timestamp:window.chatServerTimestamp()}),t.value="",loadComments(e)}catch(e){console.error("Error sending comment:",e)}}async function initCommentCount(e){if(!window.chatDb)return;const t=window.chatCollection(window.chatDb,`tracks/${e}/comments`);window.chatOnSnapshot(t,t=>{const a=t.size,n=document.querySelector(`.comment-btn[data-track-id="${e}"]`);if(n){const e=n.querySelector(".comment-count");e&&(e.textContent=a,e.style.display=a>0?"inline":"none")}})}async function loadComments(e){if(!window.chatDb)return;const t=window.chatCollection(window.chatDb,`tracks/${e}/comments`),a=window.chatQuery(t,window.chatOrderBy("timestamp","desc"),window.chatLimit(10));window.chatOnSnapshot(a,t=>{const a=document.getElementById(`comments-list-${e}`);if(!a)return;a.innerHTML="";const n=t.size,c=document.querySelector(`.comment-btn[data-track-id="${e}"]`);if(c){const e=c.querySelector(".comment-count");e&&(e.textContent=n,e.style.display=n>0?"inline":"none")}t.forEach(e=>{const t=e.data(),n=document.createElement("div");n.className="comment-item",n.innerHTML=`<span class="comment-user">${t.username}</span><span class="comment-text">${t.text}</span>`,a.appendChild(n)})})}window.addEventListener("scroll",handleScroll),window.addEventListener("load",()=>{setTimeout(loadTracksFromFirebase,500)});
