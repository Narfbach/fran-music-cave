const CACHE_VERSION='v1';const STATIC_CACHE=`static-${CACHE_VERSION}`;const DYNAMIC_CACHE=`dynamic-${CACHE_VERSION}`;const STATIC_ASSETS=['/fran-music-cave/','/fran-music-cave/index.html','/fran-music-cave/styles.min.css','/fran-music-cave/script.min.js','/fran-music-cave/chat.min.js','/fran-music-cave/upload.min.js'];const CACHE_DURATION=31536000000;self.addEventListener('install',e=>{e.waitUntil(caches.open(STATIC_CACHE).then(cache=>cache.addAll(STATIC_ASSETS)).then(()=>self.skipWaiting()))});self.addEventListener('activate',e=>{e.waitUntil(caches.keys().then(keys=>Promise.all(keys.filter(key=>key!==STATIC_CACHE&&key!==DYNAMIC_CACHE).map(key=>caches.delete(key)))).then(()=>self.clients.claim()))});self.addEventListener('fetch',e=>{const{request}=e;if(request.method!=='GET')return;if(request.url.includes('firebase')||request.url.includes('gstatic'))return;const isStaticAsset=request.url.match(/\.(js|css|png|jpg|jpeg|svg|gif|webp|woff|woff2|ttf|eot)$/);if(isStaticAsset){e.respondWith(caches.open(STATIC_CACHE).then(cache=>cache.match(request).then(cached=>{if(cached){const cachedTime=cached.headers.get('sw-cache-time');if(cachedTime&&Date.now()-parseInt(cachedTime)<CACHE_DURATION)return cached}return fetch(request).then(response=>{if(response&&response.status===200){const responseClone=response.clone();const headers=new Headers(response.headers);headers.set('sw-cache-time',Date.now().toString());headers.set('Cache-Control','public, max-age=31536000, immutable');cache.put(request,new Response(responseClone.body,{status:response.status,statusText:response.statusText,headers:headers}))}return response})})))}else{e.respondWith(fetch(request).then(response=>{if(response&&response.status===200&&!request.url.includes('firestore')){caches.open(DYNAMIC_CACHE).then(cache=>cache.put(request,response.clone()))}return response}).catch(()=>caches.match(request)))}});
